["general"]
mixins = ["~/.co.toml", "co:npm"]

["git:push"]
commands = ["git:push", "g:p"]
scripts = [
    # the command to run, can run multiple
    'git add --all',
    'git commit -m "update"',
    'git push origin',
    'git push gitee',
]

["interactive"]
commands = ["ui"]
scripts = ['''
    echo you like: 
    <%= await ui({
        type: "select",
        message: "What fruits do you like?",
        choices: ["Apple", "Banana", "Cherry", "Grape"],
    }) %>
    ''']

["test"]
commands = ["test"]
scripts = [
    '''
    <% await new Promise((resolve) => setTimeout(() => resolve(undefined), 1000)); %>
    echo "hello $name,welcome to my program"
    ''',
]

["start"]
commands = ["dev", "start"]
scripts = [
    # the command to run, can run multiple
    'node ./bootstrap.js',
]

["build"]
commands = ["build"]
scripts = [
    #
    'rm -rf ./dist',
    'pkg . --targets node18-linux-x64 --compress Brotli',
    'cp ./package/package.json.template ./dist/package.json && cp ./README.md ./dist/README.md',
    'echo "\"bin\": {\"co\": \"co\"}," >>  ./dist/package.json',
    'echo "\"name\": \"co-linux-x64\"" >> ./dist/package.json  && echo "}" >> ./dist/package.json',
    'cd ./dist && npm publish --access public',
    #
    'rm -rf ./dist',
    'pkg . --targets node18-linux-arm64 --compress Brotli',
    'cp ./package/package.json.template ./dist/package.json && cp ./README.md ./dist/README.md',
    'echo "\"bin\": {\"co\": \"co\"}," >>  ./dist/package.json',
    'echo "\"name\": \"co-linux-arm64\"" >> ./dist/package.json  && echo "}" >> ./dist/package.json',
    'cd ./dist && npm publish --access public',
    #
    'rm -rf ./dist',
    'pkg . --targets node18-macos-x64 --compress Brotli',
    'cp ./package/package.json.template ./dist/package.json && cp ./README.md ./dist/README.md',
    'echo "\"bin\": {\"co\": \"co\"}," >>  ./dist/package.json',
    'echo "\"name\": \"co-macos-x64\"" >> ./dist/package.json  && echo "}" >> ./dist/package.json',
    'cd ./dist && npm publish --access public',
    #
    'rm -rf ./dist',
    'pkg . --targets node18-macos-arm64 --compress Brotli',
    'cp ./package/package.json.template ./dist/package.json && cp ./README.md ./dist/README.md',
    'echo "\"bin\": {\"co\": \"co\"}," >>  ./dist/package.json',
    'echo "\"name\": \"co-macos-arm64\"" >> ./dist/package.json  && echo "}" >> ./dist/package.json',
    'cd ./dist && npm publish --access public',
    #
    'rm -rf ./dist',
    'pkg . --targets node18-win-x64 --compress Brotli',
    'cp ./package/package.json.template ./dist/package.json && cp ./README.md ./dist/README.md',
    'echo "\"bin\": {\"co\": \"co.exe\"}," >>  ./dist/package.json',
    'echo "\"name\": \"co-win-x64\"" >> ./dist/package.json  && echo "}" >> ./dist/package.json',
    'cd ./dist && npm publish --access public',
]

["linux-install-ldid"]
commands = ["lil"]
scripts = [
    # the command to run, can run multiple
    'cd /bin && wget https://github.com/ProcursusTeam/ldid/releases/download/v2.1.5-procursus7/ldid_linux_x86_64 && mv /bin/ldid_linux_x86_64 /bin/ldid && chmod +x /bin/ldid',
]
