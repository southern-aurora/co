import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.f28a839a.js";const h=JSON.parse('{"title":"Windows","description":"","frontmatter":{},"headers":[],"relativePath":"docs/007-windows.md","filePath":"docs/007-windows.md"}'),p={name:"docs/007-windows.md"},l=o(`<h1 id="windows" tabindex="-1">Windows <a class="header-anchor" href="#windows" aria-label="Permalink to &quot;Windows&quot;">​</a></h1><p>为了编写的脚本尽可能地可以跨平台，在 Windows 下，对 PowerShell 进行了特殊的兼容处理。</p><p>通常，我们希望可以在一条脚本中运行多条命令，且命令在遇到错误时自动停止。因此，我们经常编写这样的脚本：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~</span><span style="color:#E1E4E8;"> &amp;&amp; </span><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.ssh</span><span style="color:#E1E4E8;"> &amp;&amp; </span><span style="color:#B392F0;">cat</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">id_rsa.pub</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~</span><span style="color:#24292E;"> &amp;&amp; </span><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.ssh</span><span style="color:#24292E;"> &amp;&amp; </span><span style="color:#6F42C1;">cat</span><span style="color:#24292E;"> </span><span style="color:#032F62;">id_rsa.pub</span></span></code></pre></div><p>但在 PowerShell 中，命令遇到错误将不会停止，且不可以使用 <code>&amp;&amp;</code> 符号来运行多条连续的命令。</p><p>在 <code>co</code> 中，自动对这种情况做了兼容处理。如果你在 Windows 下的 <code>co</code> 中，原封不动地执行上面的脚本，那么将正常工作。它实际上会被转换成下面的命令来执行：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$ErrorActionPreference = </span><span style="color:#9ECBFF;">&quot;Stop&quot;</span><span style="color:#E1E4E8;"> ; </span><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~</span><span style="color:#E1E4E8;"> ; </span><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.ssh</span><span style="color:#E1E4E8;"> ; </span><span style="color:#B392F0;">cat</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">id_rsa.pub</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$ErrorActionPreference = </span><span style="color:#032F62;">&quot;Stop&quot;</span><span style="color:#24292E;"> ; </span><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~</span><span style="color:#24292E;"> ; </span><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.ssh</span><span style="color:#24292E;"> ; </span><span style="color:#6F42C1;">cat</span><span style="color:#24292E;"> </span><span style="color:#032F62;">id_rsa.pub</span></span></code></pre></div><h2 id="platform-模板方法" tabindex="-1">Platform 模板方法 <a class="header-anchor" href="#platform-模板方法" aria-label="Permalink to &quot;Platform 模板方法&quot;">​</a></h2><p>在 <code>co</code> 中，可以使用 <code>Platform</code> 模板方法来根据不同平台，返回不同的内容。</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">&quot;platform&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">commands = [</span><span style="color:#9ECBFF;">&quot;plt&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">scripts = [</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;&#39;&#39;</span></span>
<span class="line"><span style="color:#9ECBFF;">    echo &#39;</span></span>
<span class="line"><span style="color:#9ECBFF;">        To delete all your data (VERY DANGEROUS), you can try running:</span></span>
<span class="line"><span style="color:#9ECBFF;">        rm &lt;%= plt(&#39;-rf&#39;, &#39;-Recurse -Force&#39;) %&gt; ./*</span></span>
<span class="line"><span style="color:#9ECBFF;">    &#39;</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;&#39;&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">&quot;platform&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">commands = [</span><span style="color:#032F62;">&quot;plt&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">scripts = [</span></span>
<span class="line"><span style="color:#032F62;">&#39;&#39;&#39;</span></span>
<span class="line"><span style="color:#032F62;">    echo &#39;</span></span>
<span class="line"><span style="color:#032F62;">        To delete all your data (VERY DANGEROUS), you can try running:</span></span>
<span class="line"><span style="color:#032F62;">        rm &lt;%= plt(&#39;-rf&#39;, &#39;-Recurse -Force&#39;) %&gt; ./*</span></span>
<span class="line"><span style="color:#032F62;">    &#39;</span></span>
<span class="line"><span style="color:#032F62;">&#39;&#39;&#39;</span></span>
<span class="line"><span style="color:#24292E;">]</span></span></code></pre></div>`,10),e=[l];function c(t,r,i,d,E,y){return a(),n("div",null,e)}const u=s(p,[["render",c]]);export{h as __pageData,u as default};
