import{_ as s,o as a,c as o,Q as n}from"./chunks/framework.cc795e4d.js";const y=JSON.parse('{"title":"运行网络脚本","description":"","frontmatter":{},"headers":[],"relativePath":"docs/008-run-web-scripts.md","filePath":"docs/008-run-web-scripts.md"}'),e={name:"docs/008-run-web-scripts.md"},t=n(`<h1 id="运行网络脚本" tabindex="-1">运行网络脚本 <a class="header-anchor" href="#运行网络脚本" aria-label="Permalink to &quot;运行网络脚本&quot;">​</a></h1><p>你可以通过 <code>cox</code> 来运行位于网络上的脚本，体验一下：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">co</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cox</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;https://raw.githubusercontent.com/akirarika/co/master/assets/web-script-test.toml&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">co</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cox</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;https://raw.githubusercontent.com/akirarika/co/master/assets/web-script-test.toml&quot;</span></span></code></pre></div><p>只要你把你的脚本分享到 GitHub 或者其他地方，其他人就可以通过 <code>co</code> 来运行它。</p><h2 id="编写" tabindex="-1">编写 <a class="header-anchor" href="#编写" aria-label="Permalink to &quot;编写&quot;">​</a></h2><p>当脚本运行时，会执行其中的 <code>cox</code> 命令，因此，如果你已经写好了一个脚本，那么原脚本无需做任何改动，只要在 <code>commands</code> 中添加 <code>cox</code> 命令即可。</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">&quot;cox&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">commands = [</span><span style="color:#9ECBFF;">&quot;cox&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">scripts = [</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;echo &quot;hello world!&quot;&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">&quot;cox&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">commands = [</span><span style="color:#032F62;">&quot;cox&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">scripts = [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;echo &quot;hello world!&quot;&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">]</span></span></code></pre></div>`,7),p=[t];function c(l,r,i,d,E,u){return a(),o("div",null,p)}const _=s(e,[["render",c]]);export{y as __pageData,_ as default};
